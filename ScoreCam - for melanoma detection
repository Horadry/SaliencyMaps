{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"ScoreCam - for melanoma detection","provenance":[{"file_id":"1RQM67-xlkOgcu49tvnCkLoKgip3o-rD1","timestamp":1641766194493},{"file_id":"12-A2HP80DoyxgKBrfvb7rrvJkMvBGqtq","timestamp":1641762700920},{"file_id":"16n34Z6v-feRBoiTOHgb06Ws_xb-VedGc","timestamp":1626626149025},{"file_id":"1GF-szUztL1krk3Zd9uJs_J8r-3idhWBT","timestamp":1626289323529},{"file_id":"1TLfec6AjSBEntnInZp4Rc1bfFtZLT1B3","timestamp":1626266959977},{"file_id":"12yAQHoaBoqTxtd_EJa_hN2qGb93GgGlz","timestamp":1626265779993}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"s1XvGYn1HvxW"},"source":["# Mount Google Drive\n","\n","from google.colab import drive\n","drive.mount('/content/drive/')\n","\n","# Root path\n","\n","root_path = '/melanoma'\n","\n","# Local variables\n","\n","# Path for metadata\n","metadata = root_path + '/original_files/HAM10000_metadata.csv'\n","\n","# Datasets\n","train_ds = root_path + '/data/new_datasets/train'\n","test_ds = root_path + '/data/new_datasets/test'\n","valid_ds = root_path + '/data/new_datasets/validation'\n","\n","# Checkpoint for effnet\n","checkpoints_effnet = root_path + '/checkpoints/effnet/' + 'bestcheckpoint_{epoch:02d}_{val_loss:.3f}_{val_accuracy:.3f}.hdf5'\n","best_weights_effnet = root_path + '/checkpoints/effnet/'\n","\n","# Checkpoint for inception\n","checkpoints_inception = root_path + '/checkpoints/inception/' + 'bestcheckpoint_{epoch:02d}_{val_loss:.3f}_{val_accuracy:.3f}.hdf5'\n","best_weights_inception = root_path + '/checkpoints/inception/'\n","\n","dir = best_weights_inception"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Y0-p1emWzr8e"},"source":["import cv2\n","import numpy as np\n","from tensorflow.keras.models import Model\n","\n","def ScoreCam(model, img_array, layer_name, max_N=-1):\n","\n","    cls = np.argmax(model.predict(img_array))\n","    act_map_array = Model(inputs=model.input, outputs=model.get_layer(layer_name).output).predict(img_array)\n","    \n","    # extract effective maps\n","    if max_N != -1:\n","        act_map_std_list = [np.std(act_map_array[0,:,:,k]) for k in range(act_map_array.shape[3])]\n","        unsorted_max_indices = np.argpartition(-np.array(act_map_std_list), max_N)[:max_N]\n","        max_N_indices = unsorted_max_indices[np.argsort(-np.array(act_map_std_list)[unsorted_max_indices])]\n","        act_map_array = act_map_array[:,:,:,max_N_indices]\n","\n","    input_shape = model.layers[0].output_shape[0][1:]  # get input shape\n","    # 1. upsample to original input size\n","    act_map_resized_list = [cv2.resize(act_map_array[0,:,:,k], input_shape[:2], interpolation=cv2.INTER_LINEAR) for k in range(act_map_array.shape[3])]\n","    # 2. normalize the raw activation value in each activation map into [0, 1]\n","    act_map_normalized_list = []\n","    for act_map_resized in act_map_resized_list:\n","        if np.max(act_map_resized) - np.min(act_map_resized) != 0:\n","            act_map_normalized = act_map_resized / (np.max(act_map_resized) - np.min(act_map_resized))\n","        else:\n","            act_map_normalized = act_map_resized\n","        act_map_normalized_list.append(act_map_normalized)\n","    # 3. project highlighted area in the activation map to original input space by multiplying the normalized activation map\n","    masked_input_list = []\n","    for act_map_normalized in act_map_normalized_list:\n","        masked_input = np.copy(img_array)\n","        for k in range(3):\n","            masked_input[0,:,:,k] *= act_map_normalized\n","        masked_input_list.append(masked_input)\n","    masked_input_array = np.concatenate(masked_input_list, axis=0)\n","    # 4. feed masked inputs into CNN model and softmax\n","    pred_from_masked_input_array = softmax(model.predict(masked_input_array))\n","    # 5. define weight as the score of target class\n","    weights = pred_from_masked_input_array[:,cls]\n","    # 6. get final class discriminative localization map as linear weighted combination of all activation maps\n","    cam = np.dot(act_map_array[0,:,:,:], weights)\n","    cam = np.maximum(0, cam)  # Passing through ReLU\n","    cam /= np.max(cam)  # scale 0 to 1.0\n","    \n","    return cam\n","\n","def softmax(x):\n","    f = np.exp(x)/np.sum(np.exp(x), axis = 1, keepdims = True)\n","    return f"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rh_N00X-3owM"},"source":["from urllib.request import urlretrieve\n","from tensorflow.keras.preprocessing import image\n","\n","img_path = '/melanoma/data/datasets/train/melanoma/ISIC_0024313.jpg'\n","img = image.load_img(img_path, target_size=(299, 299))\n","img_array = image.img_to_array(img)\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"we_Bl6Fo0PKB","executionInfo":{"status":"ok","timestamp":1641763443929,"user_tz":-60,"elapsed":884,"user":{"displayName":"Adrienn Horv√°th","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"02789652139741753412"}},"outputId":"2a61627d-cd8f-4714-e9c2-92a81a2caaaf"},"source":["from tensorflow.keras.preprocessing.image import load_img\n","import matplotlib.pyplot as plt\n","\n","orig_img = np.array(img)\n","plt.imshow(orig_img)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"lUtxRbql4klw"},"source":["import numpy as np\n","import cv2\n","import matplotlib.pyplot as plt\n","\n","import tensorflow as tf\n","from tensorflow.keras import backend as K\n","from tensorflow.keras.models import Model\n","import gc\n","\n","tf.compat.v1.disable_eager_execution()\n","\n","def normalize(x):\n","        \"\"\"Utility function to normalize a tensor by its L2 norm\"\"\"\n","        return (x + 1e-10) / (K.sqrt(K.mean(K.square(x))) + 1e-10)\n","\n","def GradCam(model, img_array, layer_name):\n","    cls = np.argmax(model.predict(img_array))\n","    \n","    \"\"\"GradCAM method for visualizing input saliency.\"\"\"\n","    y_c = model.output[0, cls]\n","    conv_output = model.get_layer(layer_name).output\n","    grads = tf.gradients(y_c, conv_output)[0]\n","    # grads = normalize(grads)\n","\n","    gradient_function = K.function([model.input], [conv_output, grads])\n","    output, grads_val = gradient_function([img_array])\n","    output, grads_val = output[0, :], grads_val[0, :, :, :]\n","    weights = np.mean(grads_val, axis=(0, 1))\n","\n","    cam = np.dot(output, weights)\n","    cam = np.maximum(cam, 0)  # Passing through ReLU\n","    cam /= np.max(cam)  # scale 0 to 1.0  \n","\n","    return cam\n","\n","def GradCamPlusPlus(model, img_array, layer_name):\n","    cls = np.argmax(model.predict(img_array))\n","    y_c = model.output[0, cls]\n","    conv_output = model.get_layer(layer_name).output\n","    grads = tf.gradients(y_c, conv_output)[0]\n","    # grads = normalize(grads)\n","\n","    first = K.exp(y_c)*grads\n","    second = K.exp(y_c)*grads*grads\n","    third = K.exp(y_c)*grads*grads*grads\n","\n","    gradient_function = K.function([model.input], [y_c,first,second,third, conv_output, grads])\n","    y_c, conv_first_grad, conv_second_grad,conv_third_grad, conv_output, grads_val = gradient_function([img_array])\n","    global_sum = np.sum(conv_output[0].reshape((-1,conv_first_grad[0].shape[2])), axis=0)\n","\n","    alpha_num = conv_second_grad[0]\n","    alpha_denom = conv_second_grad[0]*2.0 + conv_third_grad[0]*global_sum.reshape((1,1,conv_first_grad[0].shape[2]))\n","    alpha_denom = np.where(alpha_denom != 0.0, alpha_denom, np.ones(alpha_denom.shape))\n","    alphas = alpha_num/alpha_denom\n","\n","    weights = np.maximum(conv_first_grad[0], 0.0)\n","    alpha_normalization_constant = np.sum(np.sum(alphas, axis=0),axis=0)\n","    alphas /= alpha_normalization_constant.reshape((1,1,conv_first_grad[0].shape[2]))\n","    deep_linearization_weights = np.sum((weights*alphas).reshape((-1,conv_first_grad[0].shape[2])),axis=0)\n","\n","    cam = np.sum(deep_linearization_weights*conv_output[0], axis=2)\n","    cam = np.maximum(cam, 0)  # Passing through ReLU\n","    cam /= np.max(cam) # scale 0 to 1.0  \n","\n","    return cam\n","\n","def softmax(x):\n","    f = np.exp(x)/np.sum(np.exp(x), axis = 1, keepdims = True)\n","    return f\n","\n","def ScoreCam(model, img_array, layer_name, max_N=-1):\n","\n","    cls = np.argmax(model.predict(img_array))\n","    act_map_array = Model(inputs=model.input, outputs=model.get_layer(layer_name).output).predict(img_array)\n","    \n","    # extract effective maps\n","    if max_N != -1:\n","        act_map_std_list = [np.std(act_map_array[0,:,:,k]) for k in range(act_map_array.shape[3])]\n","        unsorted_max_indices = np.argpartition(-np.array(act_map_std_list), max_N)[:max_N]\n","        max_N_indices = unsorted_max_indices[np.argsort(-np.array(act_map_std_list)[unsorted_max_indices])]\n","        act_map_array = act_map_array[:,:,:,max_N_indices]\n","\n","    input_shape = model.layers[0].output_shape[0][1:]  # get input shape\n","    # 1. upsampled to original input size\n","    act_map_resized_list = [cv2.resize(act_map_array[0,:,:,k], input_shape[:2], interpolation=cv2.INTER_LINEAR) for k in range(act_map_array.shape[3])]\n","    # 2. normalize the raw activation value in each activation map into [0, 1]\n","    act_map_normalized_list = []\n","    for act_map_resized in act_map_resized_list:\n","        if np.max(act_map_resized) - np.min(act_map_resized) != 0:\n","            act_map_normalized = act_map_resized / (np.max(act_map_resized) - np.min(act_map_resized))\n","        else:\n","            act_map_normalized = act_map_resized\n","        act_map_normalized_list.append(act_map_normalized)\n","    # 3. project highlighted area in the activation map to original input space by multiplying the normalized activation map\n","    masked_input_list = []\n","    for act_map_normalized in act_map_normalized_list:\n","        masked_input = np.copy(img_array)\n","        for k in range(3):\n","            masked_input[0,:,:,k] *= act_map_normalized\n","        masked_input_list.append(masked_input)\n","    masked_input_array = np.concatenate(masked_input_list, axis=0)\n","    # 4. feed masked inputs into CNN model and softmax\n","    pred_from_masked_input_array = softmax(model.predict(masked_input_array))\n","    # 5. define weight as the score of target class\n","    weights = pred_from_masked_input_array[:,cls]\n","    # 6. get final class discriminative localization map as linear weighted combination of all activation maps\n","    cam = np.dot(act_map_array[0,:,:,:], weights)\n","    cam = np.maximum(0, cam)  # Passing through ReLU\n","    cam /= np.max(cam)  # scale 0 to 1.0\n","    \n","    return cam\n","\n","def superimpose(original_img_path, cam, emphasize=False):\n","    \n","    img_bgr = cv2.imread(original_img_path)\n","\n","    heatmap = cv2.resize(cam, (img_bgr.shape[1], img_bgr.shape[0]))\n","    if emphasize:\n","        heatmap = sigmoid(heatmap, 50, 0.5, 1)\n","    heatmap = np.uint8(255 * heatmap)\n","    heatmap = cv2.applyColorMap(heatmap, cv2.COLORMAP_JET)\n","    \n","    hif = .8\n","    superimposed_img = heatmap * hif + img_bgr\n","    superimposed_img = np.minimum(superimposed_img, 255.0).astype(np.uint8)  # scale 0 to 255  \n","    superimposed_img_rgb = cv2.cvtColor(superimposed_img, cv2.COLOR_BGR2RGB)\n","    \n","    return superimposed_img_rgb\n","\n","import tensorflow.keras\n","\n","import tensorflow as tf\n","from tensorflow.python.framework import ops\n","from tensorflow.keras.applications.inception_v3 import preprocess_input\n","\n","def build_guided_model(build_model_function):\n","    \"\"\"Function returning modified model.\n","    \n","    Changes gradient function for all ReLu activations according to Guided Backpropagation.\n","    \"\"\"\n","    if \"GuidedBackProp\" not in ops._gradient_registry._registry:\n","        @ops.RegisterGradient(\"GuidedBackProp\")\n","        def _GuidedBackProp(op, grad):\n","            dtype = op.inputs[0].dtype\n","            return grad * tf.cast(grad > 0., dtype) * \\\n","                   tf.cast(op.inputs[0] > 0., dtype)\n","\n","    g = tf.compat.v1.get_default_graph()\n","    with g.gradient_override_map({'Relu': 'GuidedBackProp'}):\n","        new_model = build_model_function()\n","    return new_model\n","\n","def GuidedBackPropagation(model, img_array, layer_name):\n","    model_input = model.input\n","    layer_output = model.get_layer(layer_name).output\n","    max_output = K.max(layer_output, axis=3)\n","    grads = tf.gradients(max_output, model_input)[0]\n","    get_output = K.function([model_input], [grads])\n","    saliency = get_output([img_array])\n","    saliency = np.clip(saliency[0][0], 0.0, 1.0)  # scale 0 to 1.0  \n","    return saliency\n","\n","def sigmoid(x, a, b, c):\n","    return c / (1 + np.exp(-a * (x-b)))\n","\n","from tensorflow.keras.preprocessing.image import load_img, img_to_array\n","\n","def read_and_preprocess_img(path, size=(299,299)):\n","    img = load_img(path, target_size=size)\n","    x = img_to_array(img)\n","    x = np.expand_dims(x, axis=0)\n","    x = preprocess_input(x)\n","    return x"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ux706Qou0P3C"},"source":["from tensorflow.keras.applications.inception_v3 import InceptionV3\n","import matplotlib.pyplot as plt\n","\n","model = InceptionV3(include_top=True, weights='imagenet')\n","\n","#----\n","from tensorflow.keras.layers import Dense, GlobalAveragePooling2D\n","\n","base_model = InceptionV3(weights='imagenet', include_top=False, input_shape=(299, 299, 3))\n","model = base_model.output\n","model = GlobalAveragePooling2D()(model)\n","model = Dense(128, activation='relu')(model)\n","predictions = Dense(1, activation='sigmoid')(model)\n","model = Model(inputs=base_model.input, outputs=predictions)\n","\n","import os\n","if len(os.listdir(dir)) == 0:\n","  print(\"There are no previous checkpoints. Make sure you use the correct directory.\")\n","else:\n","  filename = os.listdir(dir)[-1]\n","  best_weight = dir + filename\n","  print(best_weight)\n","  model.load_weights(best_weight)\n","\n","#------\n","layer_name = model.layers[-14].name\n","img_array = read_and_preprocess_img(img_path, size=(299,299))\n","\n","score_cam = ScoreCam(model,img_array,layer_name)\n","\n","plt.imshow(score_cam)\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"MFKsnUrq0Xe0"},"source":["from tensorflow.keras.preprocessing.image import load_img\n","from tensorflow.keras.applications.inception_v3 import InceptionV3, preprocess_input, decode_predictions\n","import matplotlib.pyplot as plt\n","import cv2\n","import numpy as np\n","\n","\n","def build_VGG16():\n","    return model\n","\n","model = build_VGG16()\n","layer_name =model.layers[-14].name\n","\n","\n","orig_img = np.array(load_img(img_path),dtype=np.uint8)\n","img_array = read_and_preprocess_img(img_path, size=(299,299))\n","\n","predictions = model.predict(img_array)\n","\n","print(img_path)\n","\n","\n","grad_cam=GradCam(model,img_array,layer_name)\n","grad_cam_superimposed = superimpose(img_path, grad_cam)\n","grad_cam_emphasized = superimpose(img_path, grad_cam, emphasize=True)\n","\n","grad_cam_plus_plus=GradCamPlusPlus(model,img_array,layer_name)\n","grad_cam_plus_plus_superimposed = superimpose(img_path, grad_cam_plus_plus)\n","grad_cam_plus_plus_emphasized = superimpose(img_path, grad_cam_plus_plus, emphasize=True)\n","\n","score_cam=ScoreCam(model,img_array,layer_name)\n","score_cam_superimposed = superimpose(img_path, score_cam)\n","score_cam_emphasized = superimpose(img_path, score_cam, emphasize=True)\n","\n","faster_score_cam=ScoreCam(model,img_array,layer_name, max_N=10)\n","faster_score_cam_superimposed = superimpose(img_path, faster_score_cam)\n","faster_score_cam_emphasized = superimpose(img_path, faster_score_cam, emphasize=True)\n","\n","guided_model = build_guided_model(build_VGG16)\n","saliency = GuidedBackPropagation(guided_model, img_array, layer_name)\n","saliency_resized = cv2.resize(saliency, (orig_img.shape[1], orig_img.shape[0]))\n","\n","grad_cam_resized = cv2.resize(grad_cam, (orig_img.shape[1], orig_img.shape[0]))\n","guided_grad_cam = saliency_resized * grad_cam_resized[..., np.newaxis]\n","\n","grad_cam_plus_plus_resized = cv2.resize(grad_cam_plus_plus, (orig_img.shape[1], orig_img.shape[0]))\n","guided_grad_cam_plus_plus = saliency_resized * grad_cam_plus_plus_resized[..., np.newaxis]\n","\n","score_cam_resized = cv2.resize(score_cam, (orig_img.shape[1], orig_img.shape[0]))\n","guided_score_cam = saliency_resized * score_cam_resized[..., np.newaxis]\n","\n","faster_score_cam_resized = cv2.resize(score_cam, (orig_img.shape[1], orig_img.shape[0]))\n","guided_faster_score_cam = saliency_resized * faster_score_cam_resized[..., np.newaxis]\n","\n","img_gray = cv2.imread(img_path, 0)\n","dx = cv2.Sobel(img_gray, cv2.CV_64F, 1, 0, ksize=3)\n","dy = cv2.Sobel(img_gray, cv2.CV_64F, 0, 1, ksize=3)\n","grad = np.sqrt(dx ** 2 + dy ** 2)  # Get the gradient of the image\n","grad = cv2.dilate(grad,kernel=np.ones((5,5)), iterations=1)  # Fattening\n","grad -= np.min(grad)\n","grad /= np.max(grad)  # scale 0. to 1.\n","\n","grad_times_grad_cam = grad * grad_cam_resized\n","grad_times_grad_cam_plus_plus = grad * grad_cam_plus_plus_resized\n","grad_times_score_cam = grad * score_cam_resized\n","grad_times_faster_score_cam = grad * faster_score_cam_resized\n","\n","fig, ax = plt.subplots(nrows=4,ncols=5, figsize=(18, 11))\n","ax[0,0].imshow(orig_img)\n","ax[0,0].set_title(\"input image\")\n","ax[0,1].imshow(grad_cam_superimposed)\n","ax[0,1].set_title(\"Grad-CAM\")\n","ax[0,2].imshow(grad_cam_plus_plus_superimposed)\n","ax[0,2].set_title(\"Grad-CAM++\")\n","ax[0,3].imshow(score_cam_superimposed)\n","ax[0,3].set_title(\"Score-CAM\")\n","ax[0,4].imshow(faster_score_cam_superimposed)\n","ax[0,4].set_title(\"Faster-Score-CAM\")\n","ax[1,0].imshow(orig_img)\n","ax[1,0].set_title(\"input image\")\n","ax[1,1].imshow(grad_cam_emphasized)\n","ax[1,1].set_title(\"Grad-CAM emphasized\")\n","ax[1,2].imshow(grad_cam_plus_plus_emphasized)\n","ax[1,2].set_title(\"Grad-CAM++ emphasized\")\n","ax[1,3].imshow(score_cam_emphasized)\n","ax[1,3].set_title(\"Score-CAM emphasized\")\n","ax[1,4].imshow(faster_score_cam_emphasized)\n","ax[1,4].set_title(\"Faster-Score-CAM emphasized\")\n","ax[2,0].imshow(saliency_resized)\n","ax[2,0].set_title(\"Guided-BP\")\n","ax[2,1].imshow(guided_grad_cam)\n","ax[2,1].set_title(\"Guided-Grad-CAM\")\n","ax[2,2].imshow(guided_grad_cam_plus_plus)\n","ax[2,2].set_title(\"Guided-Grad-CAM++\")\n","ax[2,3].imshow(guided_score_cam)\n","ax[2,3].set_title(\"Guided-Score-CAM\")\n","ax[2,4].imshow(guided_faster_score_cam)\n","ax[2,4].set_title(\"Guided-Faster-Score-CAM\")\n","ax[3,0].imshow(grad, 'gray')\n","ax[3,0].set_title(\"grad\")\n","ax[3,1].imshow(grad_times_grad_cam, 'gray')\n","ax[3,1].set_title(\"grad * Grad-CAM\")\n","ax[3,2].imshow(grad_times_grad_cam_plus_plus, 'gray')\n","ax[3,2].set_title(\"grad * Grad-CAM++\")\n","ax[3,3].imshow(grad_times_score_cam, 'gray')\n","ax[3,3].set_title(\"grad * Score-CAM\")\n","ax[3,4].imshow(grad_times_faster_score_cam, 'gray')\n","ax[3,4].set_title(\"grad * Faster-Score-CAM\")\n","for i in range(4):\n","    for j in range(5):\n","        ax[i,j].axis('off')\n","plt.show()"],"execution_count":null,"outputs":[]}]}